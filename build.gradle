// Establish version and status
ext.githubProjectName = rootProject.name // Change if github project name is not the same as the root project's name

buildscript {
    repositories {
        // mavenLocal()
        mavenCentral() // maven { url 'http://jcenter.bintray.com' }
    }
    apply from: file('gradle/buildscript.gradle'), to: buildscript 
}

allprojects {
    repositories { 
        // mavenLocal()
        mavenCentral() // maven { url: 'http://jcenter.bintray.com' }
    }
}

apply from: file('gradle/convention.gradle')
apply from: file('gradle/maven.gradle')
apply from: file('gradle/check.gradle')
apply from: file('gradle/license.gradle')
// apply from: file('gradle/release.gradle')

subprojects {
    group = "org.anarres.${githubProjectName}"

    dependencies {
        // compile 'com.google.code.findbugs:jsr305:2.0.2'

        testCompile 'junit:junit:4.11'
        testCompile 'org.apache.commons:commons-lang3:3.3.2'
    }
}

project(':jrat-agent') {
	apply plugin: 'application'

	mainClassName = "org.shiftone.jrat.cli.Cli"

	configurations {
		jarjar
	}

    dependencies {
		compile 'org.ow2.asm:asm-debug-all:5.0.2'
		compile 'org.swinglabs.swingx:swingx-all:1.6.5-1'

		jarjar 'com.googlecode.jarjar:jarjar:1.3'
    }

	task('jarjar', dependsOn: jar) {
		def outputFile = new File(project.buildDir, "jarjar/shiftone-jrat.jar")
		inputs.dir sourceSets.main.output.classesDir
		outputs.file outputFile
		doLast {
			ant.taskdef(name: 'jarjar',
				classname: 'com.tonicsystems.jarjar.JarJarTask',
				classpath: configurations.jarjar.asPath)
			ant.jarjar(jarfile: outputFile) {
				fileset(dir: sourceSets.main.output.classesDir) {
					exclude(name: 'org/shiftone/jrat/integration/**/*')
				}
				fileset(dir: sourceSets.main.output.resourcesDir) {
				}

				configurations.compile.each { File file ->
					zipfileset(src: file)
				}

				rule(pattern: "org.objectweb.asm.**",
					result: "org.shiftone.jrat.depends.asm.@1")
				zap(pattern: "org.objectweb.asm.xml.**")
				// zap(pattern: "org.objectweb.asm.tree.**")
				// zap(pattern: "org.objectweb.asm.util.**")

				rule(pattern: "org.jdesktop.**",
					result: "org.shiftone.jrat.depends.jdesktop.@1")
				zap(pattern: "ca.odell.glazedlists.swt.**")
				zap(pattern: "ca.odell.glazedlists.io.**")

				// http://issues.gradle.org/browse/GRADLE-1481
				delegate.manifest {
					attribute(name: "Main-Class", value: "org.shiftone.jrat.cli.Cli")
					attribute(name: "Product-Name", value: project.name)
					attribute(name: "Product-Version", value: project.version)
					// attribute(name: "Project-Home", value: "${build.home}")
					// attribute(name: "Built-By", value: "${user.name}")
					// attribute(name: "Built-On", value: "${jared.TODAY}")

					// JVMTI
					attribute(name: "Premain-Class", value: "org.shiftone.jrat.jvmti.Agent")
					attribute(name: "Can-Redefine-Classes", value: "true")

				}
			}
		}
	}

	assemble.dependsOn jarjar
}

project(':jrat-desktop') {
	// apply plugin: 'application'

    dependencies {
		compile project(':jrat-agent')
		// compile 'org.swinglabs.swingx:swingx-all:1.6.5-1'
    }
}

project(':jrat-integration-ant') {
    dependencies {
		compile project(':jrat-agent')
		compile 'org.apache.ant:ant:1.7.0'
    }
}

project(':jrat-integration-aop') {
    dependencies {
		compile project(':jrat-agent')
		compile 'aopalliance:aopalliance:1.0'
		compile 'aspectwerkz:aspectwerkz:2.0'	// -> 2.1
		compile 'cglib:cglib:2.2.2'				// -> 3.1
		compile 'nanning:nanning:0.9'
		compile 'dynaop:dynaop:1.0-beta'
    }
}

project(':jrat-demo') {
    dependencies {
		compile project(':jrat-desktop')
    }
}
